definitions:
  reqres.BookCategoryRequest:
    properties:
      description:
        type: string
      icon:
        type: string
      name:
        type: string
      status:
        type: boolean
    required:
    - name
    type: object
  reqres.BookRequest:
    properties:
      author:
        type: string
      book_code:
        type: string
      category_id:
        type: integer
      description:
        type: string
      image:
        type: string
      language:
        type: string
      number_of_pages:
        type: integer
      publication_year:
        type: integer
      publisher:
        type: string
      status:
        type: boolean
      title:
        type: string
    required:
    - category_id
    - title
    type: object
info:
  contact: {}
paths:
  /v1/book:
    get:
      description: Get Book with Pagination
      parameters:
      - description: search (string)
        in: query
        name: search
        type: string
      - description: page (int)
        in: query
        name: page
        type: integer
      - description: limit (int)
        in: query
        name: limit
        type: integer
      - description: sort (id or publication_year or title)
        in: query
        name: sort
        type: integer
      - description: order (asc or desc)
        in: query
        name: order
        type: integer
      - description: status (status)
        in: query
        name: status
        type: integer
      - description: category_id (int)
        in: query
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Book with Pagination
      tags:
      - Book
    post:
      description: Create New Book
      parameters:
      - description: Create body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/reqres.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Book
      tags:
      - Book
  /v1/book-category:
    get:
      description: Get category Book with Pagination
      parameters:
      - description: search (string)
        in: query
        name: search
        type: string
      - description: page (int)
        in: query
        name: page
        type: integer
      - description: limit (int)
        in: query
        name: limit
        type: integer
      - description: status (status)
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Category Book  with Pagination
      tags:
      - BookCategory
    post:
      description: Create New Book Category
      parameters:
      - description: Create body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/reqres.BookCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Book Category
      tags:
      - BookCategory
  /v1/book-category/{id}:
    delete:
      description: Delete Single Book Category by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Single Book Category by ID
      tags:
      - BookCategory
    put:
      description: Update Single Book Category by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/reqres.BookCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Single Book Category by ID
      tags:
      - BookCategory
  /v1/book/{id}:
    delete:
      description: Delete Single Book by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Single Book by ID
      tags:
      - Book
    get:
      description: Get Single Book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Single Book
      tags:
      - Book
    put:
      description: Update Single Book by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/reqres.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Single Book by ID
      tags:
      - Book
  /v1/file:
    post:
      consumes:
      - multipart/form-data
      description: File Uploader
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: File Uploader
      tags:
      - File
swagger: "2.0"
